# bot.py
import os
import logging
import json  # ✅ Убедись, что импорт json здесь
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from openai import OpenAI  # ✅ Импортируем здесь
from datetime import datetime

# Словарь архивов на основе файла "фильтрация 20.06.2024.xlsx"
ARCHIVE_INFO = {
    "москва": {
        "name": "Российский государственный военный архив (РГВА)",
        "fund": "фонд Р-517п",
        "docs": "архивно-фильтрационные и трофейные материалы Управления ФСБ по Москве и Московской области",
        "url": "https://rgvarchive.ru"
    },
    "санкт-петербург": {
        "name": "УФСБ России по г. Санкт-Петербургу и Ленинградской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://78.fsb.ru"
    },
    "севастополь": {
        "name": "Государственный архив Республики Крым",
        "fund": "нет данных",
        "docs": "фильтрационные дела на бывших «остарбайтеров» - граждан, угнанных в 1942-1944 гг. из Крыма на работы в Германию",
        "url": "https://kgu-gakk.ru"
    },
    "адыгея": {
        "name": "УФСБ России по Краснодарскому краю",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://23.fsb.ru"
    },
    "алтай": {
        "name": "Государственный архив Республики Алтай",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "http://ga-ra.ru"
    },
    "башкортостан": {
        "name": "Национальный архив Республики Башкортостан",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела и трофейные немецкие карточки",
        "url": "https://narb-gku.bashkortostan.ru"
    },
    "бурятия": {
        "name": "Государственный архив Республики Бурятия",
        "fund": "фонд Р-1981",
        "docs": "фильтрационные и трофейные материалы на бывших военнопленных и репатриированных советских граждан",
        "url": "https://www.na.rkomi.ru"
    },
    "дагестан": {
        "name": "Центральный государственный архив Республики Дагестан",
        "fund": "фонд Р-1404",
        "docs": "фильтрационно-проверочные дела на бывших военнопленных (1956-1988 гг.)",
        "url": "http://cgard.ru"
    },
    "ингушетия": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "кабардино-балкария": {
        "name": "Архивная служба Кабардино-Балкарской Республики",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела и трофейные немецкие карточки",
        "url": "https://archive.orb.ru"
    },
    "калмыкия": {
        "name": "УФСБ России по Республике Калмыкия",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://08.fsb.ru"
    },
    "карачаево-черкесия": {
        "name": "Государственный архив Карачаево-Черкесской Республики",
        "fund": "нет данных",
        "docs": "фильтрационные дела",
        "url": "https://ga-kchr.ru"
    },
    "карелия": {
        "name": "УФСБ по Республике Карелия",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://10.fsb.ru"
    },
    "коми": {
        "name": "Национальный архив Республики Коми",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://nar-komi.ru"
    },
    "крым": {
        "name": "Государственный архив Республики Крым",
        "fund": "нет данных",
        "docs": "фильтрационные дела на бывших «остарбайтеров»",
        "url": "https://kgu-gakk.ru"
    },
    "марий эл": {
        "name": "Государственный архив Республики Марий Эл",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела (1945-1960 гг.)",
        "url": "https://ga-mo.ru"
    },
    "мордовия": {
        "name": "Центральный государственный архив Республики Мордовия",
        "fund": "фонд Р-3235",
        "docs": "фильтрационные дела, трофейные немецкие карточки, списки репатриантов",
        "url": "https://cgarm.mordovia.gov.ru"
    },
    "саха": {
        "name": "Национальный архив Республики Саха (Якутия)",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://nar-sakha.ru"
    },
    "северная осетия": {
        "name": "УФСБ России по Республике Северная Осетия-Алания",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://15.fsb.ru"
    },
    "татарстан": {
        "name": "Государственный архив Республики Татарстан",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://ga.tatarstan.ru"
    },
    "тыва": {
        "name": "Национальный архив Республики Тыва",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://nar-tuva.ru"
    },
    "удмуртия": {
        "name": "Центральный государственный архив Удмуртской Республики",
        "fund": "фонд Р-461",
        "docs": "учетные и трофейные немецкие карточки лиц, прошедших фильтрацию",
        "url": "https://cgau.ru"
    },
    "хакасия": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "чеченская": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "чувашская": {
        "name": "Государственный исторический архив Чувашской Республики",
        "fund": "фонд Р-2669",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://giachr.cap.ru"
    },
    "алтайский": {
        "name": "Государственный архив Алтайского края",
        "fund": "фонд Р-2000",
        "docs": "фильтрационно-проверочные дела и трофейные немецкие карточки",
        "url": "https://ga-altai.ru"
    },
    "забайкальский": {
        "name": "см. Читинскую область и Республику Бурятия",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "камчатский": {
        "name": "Государственный архив Камчатского края",
        "fund": "фонд П-1199",
        "docs": "фильтрационные дела",
        "url": "https://gakpk.ru"
    },
    "краснодарский": {
        "name": "УФСБ России по Краснодарскому краю",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://23.fsb.ru"
    },
    "красноярский": {
        "name": "Государственный архив Красноярского края",
        "fund": "фонд Р-2400",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://krasnoyarsk-archives.ru"
    },
    "ставропольский": {
        "name": "Государственный архив новейшей истории Ставропольского края",
        "fund": "фонд № 6222",
        "docs": "фильтрационно-проверочные дела, трофейные документы",
        "url": "https://sagd.ru"
    },
    "хабаровский": {
        "name": "УФСБ России по Омской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://56.fsb.ru"
    },
    "амурская": {
        "name": "УФСБ России по Омской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://56.fsb.ru"
    },
    "архангельская": [
        {
            "name": "УФСБ России по Архангельской области",
            "fund": "информационный центр",
            "docs": "фильтрационно-проверочные дела",
            "url": "https://29.fsb.ru"
        },
        {
            "name": "Информационный центр УМВД России по Архангельской области",
            "fund": "нет данных",
            "docs": "журнал репатриированных граждан и военнопленных",
            "url": "https://08.mvd.ru"
        }
    ],
    "астраханская": {
        "name": "Государственный архив Астраханской области",
        "fund": "фонд № Р-827",
        "docs": "фильтрационные дела репатриированных и бывших военнопленных",
        "url": "https://archiv30.ru"
    },
    "белгородская": {
        "name": "Государственный архив новейшей истории Белгородской области",
        "fund": "фонд № 2098",
        "docs": "фильтрационные дела и трофейные немецкие карточки",
        "url": "https://ganibo.ru"
    },
    "брянская": {
        "name": "УФСБ России по Брянской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://32.fsb.ru"
    },
    "владимирская": {
        "name": "Государственный архив Владимирской области",
        "fund": "фонд № Р-606",
        "docs": "фильтрационно-проверочные дела на советских граждан, бывших в плену",
        "url": "https://gosarhiv33.ru"
    },
    "волгоградская": {
        "name": "Информационный центр ГУ МВД России по Волгоградской области",
        "fund": "нет данных",
        "docs": "списки военнопленных, прошедших проверку в Сталинградском фильтрационном лагере",
        "url": "https://34.mvd.ru"
    },
    "вологодская": {
        "name": "УФСБ России по Вологодской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела бывших военнопленных",
        "url": "https://35.fsb.ru"
    },
    "воронежская": {
        "name": "Государственный архив общественно-политической истории Воронежской области",
        "fund": "фонд № 9353",
        "docs": "фильтрационно-проверочные дела и карточки бывших военнопленных",
        "url": "https://archive74.ru"
    },
    "ивановская": {
        "name": "Государственный архив Ивановской области",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://gaiio.ru"
    },
    "иркутская": {
        "name": "Центр документации новейшей истории — филиал ОГКУ «Государственный архив Иркутской области»",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://tdni.irkutsk.ru"
    },
    "калининградская": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "калужская": {
        "name": "Государственный архив Калужской области",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://archiv40.ru"
    },
    "кемеровская": {
        "name": "Государственный архив Кузбасса",
        "fund": "фонд Р-1243",
        "docs": "фильтрационный фонд Управления ФСБ РФ по Кемеровской области",
        "url": "https://gak-kemerovo.ru"
    },
    "кировская": [
        {
            "name": "Центральный государственный архив Кировской области",
            "fund": "нет данных",
            "docs": "фильтрационно-проверочные дела и трофейные немецкие карточки",
            "url": "https://cgako.ru"
        },
        {
            "name": "Информационный центр УМВД России по Кировской области",
            "fund": "нет данных",
            "docs": "документы на репатриированных лиц",
            "url": "https://43.mvd.ru"
        }
    ],
    "костромская": [
        {
            "name": "Государственный архив новейшей истории Костромской области",
            "fund": "фонд № Р-3656",
            "docs": "фильтрационно-проверочные дела на репатриантов и трофейные немецкие карточки",
            "url": "https://ganiko.ru"
        },
        {
            "name": "Информационный центр УМВД России по Костромской области",
            "fund": "нет данных",
            "docs": "отчеты по репатриированным",
            "url": "https://44.mvd.ru"
        }
    ],
    "курганская": {
        "name": "Государственный архив социально-политической истории Курганской области",
        "fund": "фонд № 6905",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://ga45.ru"
    },
    "Курская": {
        "name": "УФСБ России по Курской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://46.fsb.ru"
    },
    "ленинградская": {
        "name": "УФСБ России по г. Санкт-Петербургу и Ленинградской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://78.fsb.ru"
    },
    "липецкая": {
        "name": "УФСБ России по Липецкой области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://48.fsb.ru"
    },
    "магаданская": {
        "name": "УФСБ России по Омской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://56.fsb.ru"
    },
    "московская": [
        {
            "name": "Российский государственный военный архив (РГВА)",
            "fund": "фонд Р-517п",
            "docs": "архивно-фильтрационные и трофейные материалы",
            "url": "https://rgvarchive.ru"
        },
        {
            "name": "Информационный центр ГУ МВД России по Московской области",
            "fund": "нет данных",
            "docs": "сведения о репатриированных",
            "url": "https://50.mvd.ru"
        }
    ],
    "мурманская": {
        "name": "Государственный архив Мурманской области",
        "fund": "фонд № Р-140",
        "docs": "фильтрационно-проверочные дела, списки репатриированных советских военнопленных, трофейные немецкие карточки",
        "url": "https://www.murmanarchiv.ru"
    },
    "нижегородская": {
        "name": "Центральный архив Нижегородской области",
        "fund": "фонд № Р-2209",
        "docs": "фильтрационно-проверочные дела на советских военнопленных",
        "url": "https://arch.nnov.ru"
    },
    "новгородская": {
        "name": "Государственный архив Новгородской области",
        "fund": "фонд № Р-4541",
        "docs": "фильтрационные дела",
        "url": "https://gosarhiv53.ru"
    },
    "новосибирская": {
        "name": "Государственный архив Новосибирской области",
        "fund": "фонд № Р-208",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://arch.nsk.ru"
    },
    "омская": {
        "name": "УФСБ России по Омской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://56.fsb.ru"
    },
    "оренбургская": [
        {
            "name": "Объединенный государственный архив Оренбургской области",
            "fund": "нет данных",
            "docs": "фильтрационно-проверочные дела, немецкие карточки",
            "url": "https://archiv56.ru"
        },
        {
            "name": "Информационный центр УМВД России по Оренбургской области",
            "fund": "нет данных",
            "docs": "отчеты по репатриированным",
            "url": "https://56.mvd.ru"
        }
    ],
    "орловская": {
        "name": "Государственный архив Орловской области",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://gaoor.ru"
    },
    "пензенская": [
        {
            "name": "Государственный архив Пензенской области",
            "fund": "фонд № Р-889",
            "docs": "фильтрационно-проверочные дела на военнопленных за 1945-1947 гг.",
            "url": "https://arhivpnz.ru"
        },
        {
            "name": "УФСБ России по Пензенской области",
            "fund": "картотеки фонда",
            "docs": "фильтрационно-проверочные дела",
            "url": "https://58.fsb.ru"
        }
    ],
    "псковская": {
        "name": "УФСБ России по Псковской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://60.fsb.ru"
    },
    "ростовская": {
        "name": "УФСБ России по Ростовской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://61.fsb.ru"
    },
    "рязанская": [
        {
            "name": "УФСБ России по Рязанской области",
            "fund": "информационный центр",
            "docs": "фильтрационно-проверочные дела",
            "url": "https://62.fsb.ru"
        },
        {
            "name": "Информационный центр УМВД России по Рязанской области",
            "fund": "нет данных",
            "docs": "фильтрационные списки",
            "url": "https://62.mvd.ru"
        }
    ],
    "самарская": {
        "name": "УФСБ России по Самарской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://63.fsb.ru"
    },
    "саратовская": {
        "name": "Государственный архив новейшей истории Саратовской области",
        "fund": "фонд № 6210",
        "docs": "фильтрационно-проверочные дела на бывших советских военнопленных",
        "url": "https://ganiso.ru"
    },
    "сахалинская": {
        "name": "Государственный исторический архив Сахалинской области",
        "fund": "фонд № 1174",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://saharchive.ru"
    },
    "свердловская": {
        "name": "Государственный архив административных органов Свердловской области",
        "fund": "фонд Р-1",
        "docs": "фильтрационно-трофейные материалы",
        "url": "https://gaao66.ru"
    },
    "смоленская": {
        "name": "УФСБ России по Смоленской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://67.fsb.ru"
    },
    "тамбовская": {
        "name": "Государственный архив Тамбовской области",
        "fund": "фонд Р-5306",
        "docs": "фильтрационные дела за 1945-1984 гг.",
        "url": "https://tambovarchiv.ru"
    },
    "тверская": {
        "name": "ТЦДНИ Тверской области",
        "fund": "фонд Р-1011",
        "docs": "дела бывших военнопленных",
        "url": "http://tcdni.tverreg.ru"
    },
    "томская": {
        "name": "Государственный архив Томской области",
        "fund": "фонд Р-208",
        "docs": "фильтрационно-проверочные дела",
        "url": "http://gato.tomica.ru"
    },
    "тульская": {
        "name": "УФСБ России по Тульской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://71.fsb.ru"
    },
    "ульяновская": {
        "name": "УФСБ России по Ульяновской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://73.fsb.ru"
    },
    "челябинская": {
        "name": "УФСБ России по Челябинской области",
        "fund": "информационный центр",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://74.fsb.ru"
    },
    "ямало-ненецкий": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "ханты-мансийский": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "чукотский": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "донецкая": {
        "name": "нет данных",
        "fund": "",
        "docs": "",
        "url": ""
    },
    "луганская": {
        "name": "Государственная архивная служба Луганской Народной Республики",
        "fund": "нет данных",
        "docs": "фильтрационные дела за 1941-1946 годы",
        "url": "https://arch.lpr-reg.ru"
    },
    "херсонская": {
        "name": "Государственный архив Херсонской области",
        "fund": "нет данных",
        "docs": "фильтрационно-проверочные дела",
        "url": "https://rgvarchive.ru"
    },
    "запорожская": {
        "name": "Государственный архив Запорожской области",
        "fund": "нет данных",
        "docs": "фильтрационные дела на граждан, вывезенных на принудительные работы в Германию",
        "url": "https://zaporizhzhia-archives.gov.ua"
    }
}

# Настройка логирования
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# Состояния анкеты
STEP_FIO, STEP_DATES, STEP_REGION, STEP_KNOWN, STEP_GOAL, STEP_CONTACT = range(6)

# Классификация кейса
def classify_case(text):
    text = text.lower()
    if any(k in text for k in ["арестован", "расстрелян", "реабилитирован", "тройка", "нквд", "к-р", "шпион"]):
        return "репрессии"
    elif any(k in text for k in ["плен", "шталаг", "офлаг", "arolsen", "wast", "военнопленный"]):
        return "плен"
    elif any(k in text for k in ["осуждён", "уголовное дело", "срок", "тюрьма", "мурмаши"]):
        return "осуждён"
    elif any(k in text for k in ["кулак", "раскулачены", "спецпереселение"]):
        return "раскулаченные"
    elif any(k in text for k in ["внебрачный", "не был женат", "отцовство", "родился от"]):
        return "внебрачное"
    elif "родословная" in text or "предки" in text:
        return "родословная"
    else:
        return "общий"

def get_archive_recommendation(region: str, known: str) -> str:
    """
    Возвращает рекомендацию по архиву, если предок был в плену.
    """
    # Ключевые слова, указывающие на плен
    keywords = ["плен", "репатри", "остарбайтер", "фильтрац", "проверка", 
                "военноплен", "угнан", "трудармия", "лагерь", "допрос", "лагер", "допрос", "следствие"]
    
    if not any(k in known.lower() for k in keywords):
        return ""

    region_lower = region.lower().strip()

    # Поиск по ключам словаря
    for key, info in ARCHIVE_INFO.items():
        if key in region_lower:
            return (
                f"\n\n🔍 Для военнопленных и репатриированных:\n"
                f"• Обратитесь в: {info['name']}\n"
                f"• Фонд: {info['fund']}\n"
                f"• Тип документов: {info['docs']}\n"
                f"• Сайт: {info['url']}\n"
                f"• При запросе укажите: фамилию, даты, место рождения и факт пребывания в плену"
            )
    # Если регион не найден
    return (
        "\n\n🔍 Для военнопленных:\n"
        "• Уточните регион проживания предка — в базе нет точных данных\n"
        "• Рекомендуем обратиться в УФСБ или информационный центр МВД по региону"
    )
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "👋 Здравствуйте! Я — бот проекта Rodoslovnaya.pro.\n"
        "Подготовлю для Вас рекомендации для самостоятельного поиска информации о судьбе Ваших предков по документам и архивам.\n"
        "Расскажите о предке, чью историю Вы хотели бы исследовать.\n\n"
        "📌 Начнём с ФИО предка:"
    )
    return STEP_FIO

async def handle_fio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["fio"] = update.message.text
    await update.message.reply_text("📅 Примерные годы жизни предка (например: 1890–1942):")
    return STEP_DATES

async def handle_dates(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["dates"] = update.message.text
    await update.message.reply_text(
    "📍 Где жил предок? Укажите:\n"
    "• Место рождения (деревня, село, город)\n"
    "• Где проживал\n"
    "• Где умер и похоронен (если известно)\n\n"
    "Пример: родился Петрово, Рязанская обл., затем Оренбургская область, умер в Алексине Тульская область"
)
    return STEP_REGION

async def handle_region(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["region"] = update.message.text
    await update.message.reply_text(
    "📚 Что Вы уже знаете о предке?\n"
    "Укажите всё, что передавали в семье:\n"
    "• Профессия, военная служба\n"
    "• Судьба в войну, репрессии, плен\n"
    "• Родственные связи (отец, мать — по имени-отчеству)\n"
    "• Интересные факты (например: «делал волокуши», «капитан с Кронштадта»)"
)
    return STEP_KNOWN

async def handle_known(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["known"] = update.message.text
    await update.message.reply_text(
    "🎯 Что бы Вы хотели узнать о предке и его фамильном роде?\n"
    "Выберите или укажите:\n"
    "• Кто были его родители?\n"
    "• Где он родился и где похоронен?\n"
    "• Какова была его судьба в войну или в репрессиях?\n"
    "• Из какого он рода, есть ли более ранние предки?\n"
    "• Что подтвердит его подвиг или трудовой путь?"
)
    return STEP_GOAL

async def handle_goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["goal"] = update.message.text
    await update.message.reply_text("📬 Оставьте, пожалуйста, Telegram или email для связи:")
    return STEP_CONTACT

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["contact"] = update.message.text
    data = context.user_data
    case_type = classify_case(f"{data['known']} {data['goal']}")
    data["case_type"] = case_type
    
    await update.message.reply_text(
    "⏳ <b> 🔍 Спасибо за анкету!</b>\n"
    "🧠 Rodoslovnaya.pro анализирует данные по архивам и источникам…\n"
    "Подождите немного — скоро вы получите подробный план поиска.",
    parse_mode="HTML"
)
    await update.message.reply_chat_action("typing")
   
# Получаем рекомендацию по архиву
archive_context = get_archive_recommendation(data['region'], data['known'])

    # Формируем промпт для OpenAI
prompt = f"""
Составь пошаговую стратегию поиска предков на основе данных:

📌 Исходные данные:
ФИО: {data['fio']}
Годы жизни: {data['dates']}
Место: {data['region']}
Известно: {data['known']}
Цель: {data['goal']}

🧠 Рекомендации от Rodoslovnaya.pro:

Ответ должен быть:
- Структурирован как: "📌 Исходные данные", "🔍 ПОШАГОВАЯ СТРАТЕГИЯ", "✅ Чек-лист", "📬 Нужна помощь?"
- С указанием **глубины источников**: ЗАГСы (с 1920-х по настоящее время), метрические книги (c 1700 до 1917), ревизские сказки (c 1700 до 1858), исповедные ведомости (c 1700 до 1880-х), данные сельскохозяйственной переписи 1916 года, данные всеобщей перепись населения 1897
- С **конкретными ссылками** на архивы, ЗАГСы, онлайн-ресурсы (не общие, а точные: https://obd-memorial.ru, https://pamyat-naroda.ru, https://arolsen-archives.org, https://forum.vgd.ru/, https://yandex.ru/archive )
- С **точными рекомендациями по архивам**:
  • Если предок был в плену или репатриирован — укажи **конкретный архив по региону** (например: Госархив Мурманской области, фонд Р-140)
  • Используй данные из файла "фильтрация 20.06.2024.xlsx"
  • Укажи: "фильтрационно-проверочные дела", "табельные карточки", "списки репатриированных"
- С **примерными тарифами** (например: ЗАГС — 350–400 ₽, архив — от 500 ₽)
- С рекомендацией по **ДНК-тесту (Genotek, MyHeritage)** для поиска родственников
- Без общих фраз — только конкретика
- На русском языке

{archive_context}
    """

    try:
        # Проверка ключа
        api_key = os.getenv("OPENAI_API_KEY")
        if not api_key:
            raise EnvironmentError("OPENAI_API_KEY не найден!")

        client = OpenAI(api_key=api_key)

        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Ты — профессиональный генеалог. Пиши чётко, по делу, с источниками, тарифами и ссылками. Не добавляй вступления — начинай сразу с содержания."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1500,
            temperature=0.7
        )
        ai_response = completion.choices[0].message.content.strip()

        # Формируем итоговый ответ
        response = f"""🧠 Rodoslovnaya.PRO рекомендует:

{ai_response}

📬 Нужна помощь?
Заполните заявку на сайте rodoslovnaya.pro,
напишите нам на predki@rodoslovnaya.pro
или в Telegram @rodoslovnaya_pro"""

    except Exception as e:
        response = f"⚠️ Ошибка при генерации совета: {str(e)}\n\nПопробуйте позже или напишите нам напрямую."

    # ✅ Отправляем ответ (всё ещё внутри handle_contact)
    await update.message.reply_text(response)

    # ✅ Сохраняем в таблицу
    save_to_google_sheets({
        "fio": data.get("fio"),
        "dates": data.get("dates"),
        "region": data.get("region"),
        "known": data.get("known"),
        "goal": data.get("goal"),
        "contact": data.get("contact"),
        "case_type": case_type,
        "recommendations": response
    })

    return ConversationHandler.END

def save_to_google_sheets(data):
    try:
        print("✅ 1. Начинаем сохранение в Google Таблицу...")
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]  # ✅ Исправлено: убраны пробелы
        
        json_creds = os.getenv("GOOGLE_CREDENTIALS")
        if not json_creds:
            raise EnvironmentError("Переменная GOOGLE_CREDENTIALS не найдена")
        
        creds_dict = json.loads(json_creds)
        print("✅ 2. JSON успешно распарсен")

        creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
        print("✅ 3. Учётные данные созданы")

        client = gspread.authorize(creds)
        print("✅ 4. Подключились к Google Sheets API")

        sheet = client.open_by_url(os.getenv("GOOGLE_SHEET_URL")).sheet1
        print("✅ 5. Подключились к таблице")

        row = [
            datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            data.get("fio"),
            data.get("dates"),
            data.get("region"),
            data.get("known"),
            data.get("goal"),
            data.get("contact"),
            data.get("case_type"),
            data.get("recommendations")
        ]
        sheet.append_row(row)
        print("✅ 6. ДАННЫЕ УСПЕШНО ДОБАВЛЕНЫ В ТАБЛИЦУ!")
    except Exception as e:
        print(f"❌ ОШИБКА при сохранении: {e}")

def main():
    TOKEN = os.getenv("TELEGRAM_TOKEN")
    if not TOKEN:
        logger.error("Токен не найден! Установите переменную TELEGRAM_TOKEN")
        return
    # 🔽 ДОБАВЬ СЮДА ПРИНТ 🔽
    print(f"TELEGRAM_TOKEN: {'Да, есть' if TOKEN else 'Нет!'}")
    print(f"OPENAI_API_KEY: {os.getenv('OPENAI_API_KEY')}")
    print(f"GOOGLE_SHEET_URL: {os.getenv('GOOGLE_SHEET_URL')}")
    # 🔼 ДОБАВЬ СЮДА ПРИНТ 🔼

    # Проверка OpenAI API Key
    api_key = os.getenv("OPENAI_API_KEY")
    if not api_key:
        logger.error("OPENAI_API_KEY не найден! Бот не сможет генерировать советы.")
        return
        
    # Создаём обработчик диалога
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            STEP_FIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_fio)],
            STEP_DATES: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_dates)],
            STEP_REGION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_region)],
            STEP_KNOWN: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_known)],
            STEP_GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_goal)],
            STEP_CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_contact)],
        },
        fallbacks=[]
    )

    # Создаём приложение
    app = (
        Application.builder()
        .token(TOKEN)
        .read_timeout(30)
        .write_timeout(30)
        .connect_timeout(30)
        .pool_timeout(30)
        .build()
    )

    # Добавляем обработчик
    app.add_handler(conv_handler)

    # Запускаем бота
    app.run_polling()

# ✅ Запускаем main()
if __name__ == "__main__":
    main()
