# bot.py
import os
import logging
import json  # ‚úÖ –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏–º–ø–æ—Ä—Ç json –∑–¥–µ—Å—å
import asyncio  # <-- –≠–¢–ê –°–¢–†–û–ö–ê –î–û–õ–ñ–ù–ê –ë–´–¢–¨!
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from openai import OpenAI  # ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

import re

def parse_contact(raw_contact: str):
    if not raw_contact:
        return {"email": None, "phone": None, "telegram": None}

    text = raw_contact.lower().strip()
    result = {
        "raw": raw_contact,
        "email": None,
        "phone": None,
        "telegram": None
    }

    # 1. Email
    email_match = re.search(r'\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}\b', text)
    if email_match:
        result["email"] = email_match.group()

    # 2. –¢–µ–ª–µ—Ñ–æ–Ω
    phone_match = re.search(r'(?:\+?7|8)[\s\-()]*?(\d[\s\-()]*?){10}', text)
    if phone_match:
        digits = re.sub(r'\D', '', phone_match.group())
        if len(digits) == 11 and digits.startswith('8'):
            digits = '7' + digits[1:]
        elif len(digits) == 10:
            digits = '7' + digits
        result["phone"] = f"+{digits}"

    # 3. Telegram ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï —á–∞—Å—Ç—å email
    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ email –∏–∑ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å @gmail.com
    clean_text = re.sub(r'\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}\b', '', text)

    tg_match = re.search(
        r'(?:@|t\.me/|https?://t\.me/)([a-zA-Z][a-zA-Z0-9_]{4,})|([a-zA-Z][a-zA-Z0-9_]{4,})(?=\s|$)',
        clean_text
    )
    if tg_match:
        username = tg_match.group(1) or tg_match.group(2)
        if username and len(username) >= 5 and not username.isdigit():
            result["telegram"] = f"@{username}"

    return result

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
STEP_FIO, STEP_DATES, STEP_REGION, STEP_KNOWN, STEP_GOAL, STEP_CONTACT = range(6)

# –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–µ–π—Å–∞
def classify_case(text):
    text = text.lower()
    if any(k in text for k in ["–∞—Ä–µ—Å—Ç–æ–≤–∞–Ω", "—Ä–∞—Å—Å—Ç—Ä–µ–ª—è–Ω", "—Ä–µ–∞–±–∏–ª–∏—Ç–∏—Ä–æ–≤–∞–Ω", "—Ç—Ä–æ–π–∫–∞", "–Ω–∫–≤–¥", "–∫-—Ä", "—à–ø–∏–æ–Ω"]):
        return "—Ä–µ–ø—Ä–µ—Å—Å–∏–∏"
    elif any(k in text for k in ["–ø–ª–µ–Ω", "—à—Ç–∞–ª–∞–≥", "–æ—Ñ–ª–∞–≥", "arolsen", "wast", "–≤–æ–µ–Ω–Ω–æ–ø–ª–µ–Ω–Ω—ã–π"]):
        return "–ø–ª–µ–Ω"
    elif any(k in text for k in ["–æ—Å—É–∂–¥—ë–Ω", "—É–≥–æ–ª–æ–≤–Ω–æ–µ –¥–µ–ª–æ", "—Å—Ä–æ–∫", "—Ç—é—Ä—å–º–∞", "–º—É—Ä–º–∞—à–∏"]):
        return "–æ—Å—É–∂–¥—ë–Ω"
    elif any(k in text for k in ["–∫—É–ª–∞–∫", "—Ä–∞—Å–∫—É–ª–∞—á–µ–Ω—ã", "—Å–ø–µ—Ü–ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–µ"]):
        return "—Ä–∞—Å–∫—É–ª–∞—á–µ–Ω–Ω—ã–µ"
    elif any(k in text for k in ["–≤–Ω–µ–±—Ä–∞—á–Ω—ã–π", "–Ω–µ –±—ã–ª –∂–µ–Ω–∞—Ç", "–æ—Ç—Ü–æ–≤—Å—Ç–≤–æ", "—Ä–æ–¥–∏–ª—Å—è –æ—Ç"]):
        return "–≤–Ω–µ–±—Ä–∞—á–Ω–æ–µ"
    elif "—Ä–æ–¥–æ—Å–ª–æ–≤–Ω–∞—è" in text or "–ø—Ä–µ–¥–∫–∏" in text:
        return "—Ä–æ–¥–æ—Å–ª–æ–≤–Ω–∞—è"
    else:
        return "–æ–±—â–∏–π"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø ‚Äî –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ Rodoslovnaya.pro.\n"
        "–ü–æ–¥–≥–æ—Ç–æ–≤–ª—é –¥–ª—è –í–∞—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—É–¥—å–±–µ –í–∞—à–∏—Ö –ø—Ä–µ–¥–∫–æ–≤ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º –∏ –∞—Ä—Ö–∏–≤–∞–º.\n"
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø—Ä–µ–¥–∫–µ, —á—å—é –∏—Å—Ç–æ—Ä–∏—é –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å.\n\n"
        "üìå –ù–∞—á–Ω—ë–º —Å –§–ò–û –ø—Ä–µ–¥–∫–∞:"
    )
    return STEP_FIO

async def handle_fio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["fio"] = update.message.text
    await update.message.reply_text("üìÖ –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –≥–æ–¥—ã –∂–∏–∑–Ω–∏ –ø—Ä–µ–¥–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1890‚Äì1942):")
    return STEP_DATES

async def handle_dates(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["dates"] = update.message.text
    await update.message.reply_text(
    "üìç –ì–¥–µ –∂–∏–ª –ø—Ä–µ–¥–æ–∫? –£–∫–∞–∂–∏—Ç–µ:\n"
    "‚Ä¢ –ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–µ—Ä–µ–≤–Ω—è, —Å–µ–ª–æ, –≥–æ—Ä–æ–¥)\n"
    "‚Ä¢ –ì–¥–µ –ø—Ä–æ–∂–∏–≤–∞–ª\n"
    "‚Ä¢ –ì–¥–µ —É–º–µ—Ä –∏ –ø–æ—Ö–æ—Ä–æ–Ω–µ–Ω (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ)\n\n"
    "–ü—Ä–∏–º–µ—Ä: —Ä–æ–¥–∏–ª—Å—è –ü–µ—Ç—Ä–æ–≤–æ, –†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª., –∑–∞—Ç–µ–º –û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, —É–º–µ—Ä –≤ –ê–ª–µ–∫—Å–∏–Ω–µ –¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
)
    return STEP_REGION

async def handle_region(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["region"] = update.message.text
    await update.message.reply_text(
    "üìö –ß—Ç–æ –í—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ –æ –ø—Ä–µ–¥–∫–µ?\n"
    "–£–∫–∞–∂–∏—Ç–µ –≤—Å—ë, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∏ –≤ —Å–µ–º—å–µ:\n"
    "‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏—è, –≤–æ–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞\n"
    "‚Ä¢ –°—É–¥—å–±–∞ –≤ –≤–æ–π–Ω—É, —Ä–µ–ø—Ä–µ—Å—Å–∏–∏, –ø–ª–µ–Ω\n"
    "‚Ä¢ –†–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏ (–æ—Ç–µ—Ü, –º–∞—Ç—å ‚Äî –ø–æ –∏–º–µ–Ω–∏-–æ—Ç—á–µ—Å—Ç–≤—É)\n"
    "‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–¥–µ–ª–∞–ª –≤–æ–ª–æ–∫—É—à–∏¬ª, ¬´–∫–∞–ø–∏—Ç–∞–Ω —Å –ö—Ä–æ–Ω—à—Ç–∞–¥—Ç–∞¬ª)"
)
    return STEP_KNOWN

async def handle_known(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["known"] = update.message.text
    await update.message.reply_text(
    "üéØ –ß—Ç–æ –±—ã –í—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–µ–¥–∫–µ –∏ –µ–≥–æ —Ñ–∞–º–∏–ª—å–Ω–æ–º —Ä–æ–¥–µ?\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ:\n"
    "‚Ä¢ –ö—Ç–æ –±—ã–ª–∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª–∏?\n"
    "‚Ä¢ –ì–¥–µ –æ–Ω —Ä–æ–¥–∏–ª—Å—è –∏ –≥–¥–µ –ø–æ—Ö–æ—Ä–æ–Ω–µ–Ω?\n"
    "‚Ä¢ –ö–∞–∫–æ–≤–∞ –±—ã–ª–∞ –µ–≥–æ —Å—É–¥—å–±–∞ –≤ –≤–æ–π–Ω—É –∏–ª–∏ –≤ —Ä–µ–ø—Ä–µ—Å—Å–∏—è—Ö?\n"
    "‚Ä¢ –ò–∑ –∫–∞–∫–æ–≥–æ –æ–Ω —Ä–æ–¥–∞, –µ—Å—Ç—å –ª–∏ –±–æ–ª–µ–µ —Ä–∞–Ω–Ω–∏–µ –ø—Ä–µ–¥–∫–∏?\n"
    "‚Ä¢ –ß—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –µ–≥–æ –ø–æ–¥–≤–∏–≥ –∏–ª–∏ —Ç—Ä—É–¥–æ–≤–æ–π –ø—É—Ç—å?"
)
    return STEP_GOAL

async def handle_goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["goal"] = update.message.text
    await update.message.reply_text("üì¨ –û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à Telegram –∏–ª–∏ email –¥–ª—è —Å–≤—è–∑–∏:")
    return STEP_CONTACT

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["contact"] = update.message.text
    data = context.user_data
        # üîΩ –ò–ó–í–õ–ï–ö–ê–ï–ú –§–ê–ú–ò–õ–ò–Æ –ü–†–ï–î–ö–ê üîΩ
    full_name = data.get("fio", "")
    surname = ""
    if full_name:
        parts = full_name.strip().split()
        if len(parts) >= 1:
            surname = parts[0]  # –§–∞–º–∏–ª–∏—è ‚Äî –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ
    # üîº
    case_type = classify_case(f"{data['known']} {data['goal']}")
    data["case_type"] = case_type

    # 3. –ü–∞—Ä—Å–∏–º –∫–æ–Ω—Ç–∞–∫—Ç
    contact_raw = update.message.text
    parsed_contact = parse_contact(contact_raw)
    data["contact_raw"] = contact_raw
    data["email"] = parsed_contact["email"]
    data["phone"] = parsed_contact["phone"]
    data["telegram"] = parsed_contact["telegram"]
    
    await update.message.reply_text(
    "<b> üîç –°–ø–∞—Å–∏–±–æ –∑–∞ –∞–Ω–∫–µ—Ç—É!</b>\n"
    "‚è≥ Rodoslovnaya.PRO –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ö–∏–≤–∞–º –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º‚Ä¶\n"
    "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ ‚Äî —Å–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –ø–æ–∏—Å–∫–∞.",
    parse_mode="HTML"
)
    await update.message.reply_chat_action("typing")
     # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è
    response_sent = False
    delay_task = None

    async def send_delay_notification():
        nonlocal response_sent
        await asyncio.sleep(10)
        if not response_sent:
            await update.message.reply_text(
                "‚è≥ –í–∞—à –≥–µ–Ω–µ–∞–ª–æ–≥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç ‚Äî –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, —É–∂–µ –≤–æ—Ç-–≤–æ—Ç..."
            )
            
    # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ
    delay_task = asyncio.create_task(send_delay_notification())

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ "–¥–∞—Ç—ã"
    birth_year = None
    if data.get("dates"):
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ 4-–∑–Ω–∞—á–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1700‚Äì2025
        years = re.findall(r'\b(1[7-9][0-9]{2}|20[0-2][0-5])\b', data["dates"])
        if years:
            birth_year = int(years[0])
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∂–∏–≤ –ª–∏ —á–µ–ª–æ–≤–µ–∫
    is_alive = any(k in data.get("known", "").lower() for k in ["–∂–∏–≤", "–∂–∏–≤—ë—Ç", "–Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è", "–ø–æ —Å–µ–π –¥–µ–Ω—å"])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    source_context = "üìå –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ –ø–µ—Ä–∏–æ–¥—É:"
    
    if birth_year and birth_year >= 1920:
        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥: —Ç–æ–ª—å–∫–æ –ó–ê–ì–°—ã
        source_context += f"\n‚Ä¢ –î–ª—è –ø—Ä–µ–¥–∫–æ–≤, —Ä–æ–¥–∏–≤—à–∏—Ö—Å—è –ø–æ—Å–ª–µ 1920 –≥–æ–¥–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å **–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è –ó–ê–ì–°–æ–≤** –ø–æ –º–µ—Å—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –±—Ä–∞–∫–∞ –∏–ª–∏ —Å–º–µ—Ä—Ç–∏."
        if is_alive:
            source_context += f"\n‚Ä¢ –£—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ {data['fio']} –∂–∏–≤, –∞–∫—Ü–µ–Ω—Ç —Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –Ω–∞ **—Å–±–æ—Ä–µ —É—Å—Ç–Ω—ã—Ö —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤, —Å–µ–º–µ–π–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Ñ–æ—Ç–æ–∞—Ä—Ö–∏–≤–æ–≤**."
        source_context += f"\n‚Ä¢ –û–Ω–ª–∞–π–Ω-–∞—Ä—Ö–∏–≤—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ø–Ω–¥–µ–∫—Å.–ê—Ä—Ö–∏–≤) –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –≥–∞–∑–µ—Ç–∞—Ö, —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞—Ö, –ø–µ—Ä–µ–ø–∏—Å—è—Ö."
    else:
        # –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥: –¥–æ 1920
        source_context += f"\n‚Ä¢ –î–ª—è –ø—Ä–µ–¥–∫–æ–≤, —Ä–æ–¥–∏–≤—à–∏—Ö—Å—è –¥–æ 1920 –≥–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ **–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**: –º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –∫–Ω–∏–≥–∏ (–¥–æ 1917), –∏—Å–ø–æ–≤–µ–¥–Ω—ã–µ –≤–µ–¥–æ–º–æ—Å—Ç–∏ (–¥–æ 1880-—Ö), —Ä–µ–≤–∏–∑—Å–∫–∏–µ —Å–∫–∞–∑–∫–∏ (–¥–æ 1858)."
        source_context += f"\n‚Ä¢ –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ **–≤—Å–µ–æ–±—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è 1897 –≥–æ–¥–∞** –∏ **—Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∏ 1916 –≥–æ–¥–∞** –ø–æ –º–µ—Å—Ç–∞–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–µ–¥–æ–∫ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–æ–º."
        source_context += f"\n‚Ä¢ –ü–æ–∏—Å–∫ –≤ —Ü–µ—Ä–∫–æ–≤–Ω—ã—Ö –∞—Ä—Ö–∏–≤–∞—Ö –∏ —Ñ–æ–Ω–¥–∞—Ö –§–°–ì–° (–§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–µ –°–æ–±—Ä–∞–Ω–∏–µ –ì–µ–Ω–µ–∞–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –°–µ–º–µ–π)."
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
    source_context += f"""
    \nüìå –û–Ω–ª–∞–π–Ω-—Ä–µ—Å—É—Ä—Å—ã:
    ‚Ä¢ [–û–ë–î –ú–µ–º–æ—Ä–∏–∞–ª](https://obd-memorial.ru) ‚Äî —Ä–µ–ø—Ä–µ—Å—Å–∏–∏, –≤–æ–µ–Ω–Ω—ã–µ, —Ä–µ–ø–∞—Ç—Ä–∏–∞–Ω—Ç—ã
    ‚Ä¢ [–ü–∞–º—è—Ç—å –Ω–∞—Ä–æ–¥–∞](https://pamyat-naroda.ru) ‚Äî —Ñ—Ä–æ–Ω—Ç–æ–≤–∏–∫–∏
    ‚Ä¢ [–ü–æ–¥–≤–∏–≥ –Ω–∞—Ä–æ–¥–∞](https://podvignaroda.ru) ‚Äî –Ω–∞–≥—Ä–∞–¥—ã
    ‚Ä¢ [Arolsen Archives](https://arolsen-archives.org) ‚Äî –≤–æ–µ–Ω–Ω–æ–ø–ª–µ–Ω–Ω—ã–µ, "–æ—Å—Ç–∞—Ä–±–∞–π—Ç–µ—Ä—ã"
    ‚Ä¢ [Genotek](https://genotek.ru) ‚Äî –î–ù–ö-—Ç–µ—Å—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤
    ‚Ä¢ [Yandex.–ê—Ä—Ö–∏–≤](https://yandex.ru/archive) ‚Äî –≥–∞–∑–µ—Ç—ã, —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏, –ø–µ—Ä–µ–ø–∏—Å–∏
    ‚Ä¢ [Forum.VGD.ru](https://forum.vgd.ru) ‚Äî –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≥–µ–Ω–µ–∞–ª–æ–≥–æ–≤
    """
    
    # üîΩ –§–û–†–ú–ò–†–£–ï–ú –ê–ù–ê–õ–ò–ó –§–ê–ú–ò–õ–ò–ò üîΩ
    surname_analysis = "–§–∞–º–∏–ª–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞."
    if surname:
        surname_analysis = f"""
    \nüë™ –ê–ù–ê–õ–ò–ó –§–ê–ú–ò–õ–ò–ò:
    –§–∞–º–∏–ª–∏—è: {surname}
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ '{surname}' –∏ —É–∫–∞–∂–∏:
    - –¢–æ—á–Ω–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: –æ—Ç –∫–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞, –∏–º–µ–Ω–∏ –∏–ª–∏ –º–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ó–µ–ª—å–ø—É—Å ‚Äî –æ—Ç –ª–∞—Ç—ã—à—Å–∫–æ–≥–æ –∏–º–µ–Ω–∏ Zelpe)
    - –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: –ª–∞—Ç—ã—à—Å–∫–∞—è, –ª–∏—Ç–æ–≤—Å–∫–∞—è, –Ω–µ–º–µ—Ü–∫–∞—è, —Ä—É—Å—Å–∫–∞—è –∏ —Ç.–¥.
    - –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ: —Ä–µ–≥–∏–æ–Ω—ã, —Å—Ç—Ä–∞–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –õ–∞—Ç–≤–∏—è, –õ–∏—Ç–≤–∞, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å)
    - –°—É—Ñ—Ñ–∏–∫—Å: -—É—Å (–±–∞–ª—Ç–∏–π—Å–∫–∏–π), -–æ–≤ (—Ä—É—Å—Å–∫–æ–µ –æ—Ç—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ) –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ
    - –í–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–ø–∏—Å–∞–Ω–∏—è: Zelpus, Zelpe, –ó–µ–ª—å–ø—Å
    - –°–≤—è–∑—å —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π, –∏–º–µ–Ω–µ–º, –º–µ—Å—Ç–æ–º: –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å –ú—É—Ä–∑–∏–Ω–∫–æ–π
    - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –≥–¥–µ –∏—Å–∫–∞—Ç—å (–ì–æ—Å–∞—Ä—Ö–∏–≤ –õ–û, Arolsen, Latvijas Valsts arhƒ´vs)
    - –ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –∫–Ω–∏–≥–∏, –ø–µ—Ä–µ–ø–∏—Å–∏, DP-–ª–∞–≥–µ—Ä—è)
    
    –ù–µ –ø–∏—à–∏ –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã. –¢–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞.
    """
    else:
        surname_analysis = "–§–∞–º–∏–ª–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞."
    # üîº
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è OpenAI
    prompt = f"""
–°–æ—Å—Ç–∞–≤—å –ø–æ—à–∞–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö:

üìå –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
–§–ò–û: {data['fio']}
–ì–æ–¥—ã –∂–∏–∑–Ω–∏: {data['dates']}
–ú–µ—Å—Ç–æ: {data['region']}
–ò–∑–≤–µ—Å—Ç–Ω–æ: {data['known']}
–¶–µ–ª—å: {data['goal']}

{surname_analysis}

üß† –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç Rodoslovnaya.pro:

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫: "üìå –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï", "üë™ –ê–ù–ê–õ–ò–ó –§–ê–ú–ò–õ–ò–ò", "üîç –ü–û–®–ê–ì–û–í–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø", "‚úÖ –ß–ï–ö-–õ–ò–°–¢"
- –° —É–∫–∞–∑–∞–Ω–∏–µ–º **–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤** (—Å–º. –Ω–∏–∂–µ)
- –° **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏** –Ω–∞ –∞—Ä—Ö–∏–≤—ã, –ó–ê–ì–°—ã, –æ–Ω–ª–∞–π–Ω-—Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
- –° **–ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏** (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ó–ê–ì–° ‚Äî 350‚Äì400 ‚ÇΩ)
- –° —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π –ø–æ **–î–ù–ö-—Ç–µ—Å—Ç—É (Genotek, MyHeritage)** –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤
- –ë–µ–∑ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑ ‚Äî —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞
- –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ

{source_context}
"""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
        api_key = os.getenv("OPENAI_API_KEY")
        if not api_key:
            raise EnvironmentError("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
        client = OpenAI(api_key=api_key)
    
        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": """
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ–∞–ª–æ–≥. –ü–∏—à–∏ —á—ë—Ç–∫–æ, –ø–æ –¥–µ–ª—É, —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏, —Ç–∞—Ä–∏—Ñ–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏. 
–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏ '–≤–æ–∑–º–æ–∂–Ω–æ', '–≤–µ—Ä–æ—è—Ç–Ω–æ', '–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ'. 
–í—Å–µ–≥–¥–∞ –¥–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —ç–∫—Å–ø–µ—Ä—Ç Rodoslovnaya.pro.

–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–º–∏–ª–∏–∏:
- –£–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ (–Ω–µ '—Ç–æ–ø–æ–Ω–∏–º–∏—á–µ—Å–∫–æ–µ', –∞ '–ª–∞—Ç—ã—à—Å–∫–æ–µ, –æ—Ç –∏–º–µ–Ω–∏ Zelpe')
- –ù–∞–∑—ã–≤–∞–π –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (–Ω–µ '—Ä—É—Å—Å–∫–∞—è', –∞ '–ª–∞—Ç—ã—à—Å–∫–∞—è, –ª–∏—Ç–æ–≤—Å–∫–∞—è')
- –û–±—ä—è—Å–Ω—è–π —Å—É—Ñ—Ñ–∏–∫—Å—ã (-—É—Å ‚Äî –±–∞–ª—Ç–∏–π—Å–∫–∏–π)
- –î–∞–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã (–ì–æ—Å–∞—Ä—Ö–∏–≤ –õ–û, Latvijas Valsts arhƒ´vs)
- –ù–µ –≤—ã–¥—É–º—ã–≤–∞–π –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–ø–∏—Å–∞–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ

–ü—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ª—é–±–æ–π —Ñ–∞–º–∏–ª–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â—É—é –ª–æ–≥–∏–∫—É:
1. **–°—É—Ñ—Ñ–∏–∫—Å**:
   - "-—É—Å", "-—Å", "-—Å–∫—É—Å" ‚Üí –±–∞–ª—Ç–∏–π—Å–∫–∏–µ (–ª–∞—Ç—ã—à—Å–∫–∏–µ, –ª–∏—Ç–æ–≤—Å–∫–∏–µ)
   - "-–æ–≤", "-–∏–Ω" ‚Üí —Ä—É—Å—Å–∫–∏–µ, –æ—Ç –æ—Ç—á–µ—Å—Ç–≤–∞
   - "-–∫–æ", "-–µ–Ω–∫–æ" ‚Üí —É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ
   - "-—Å–∫–∏–π" ‚Üí —Ç–æ–ø–æ–Ω–∏–º–∏—á–µ—Å–∫–∏–µ (–æ—Ç –º–µ—Å—Ç–∞)
   - "-—è–Ω", "-—è–Ω—Ü" ‚Üí –∞—Ä–º—è–Ω—Å–∫–∏–µ
   - "-—è–Ω", "-—è–Ω—Ü" ‚Üí –∞—Ä–º—è–Ω—Å–∫–∏–µ

2. **–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ**:
   - –ë–∞–ª—Ç–∏–π—Å–∫–∏–µ ‚Üí –∏—â–∏—Ç–µ –≤ –õ–∞—Ç–≤–∏–∏, –õ–∏—Ç–≤–µ, –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
   - –¢–∞—Ç–∞—Ä—Å–∫–∏–µ ‚Üí –ü–æ–≤–æ–ª–∂—å–µ, –£—Ä–∞–ª
   - –ï–≤—Ä–µ–π—Å–∫–∏–µ ‚Üí –ë–µ–ª–∞—Ä—É—Å—å, –£–∫—Ä–∞–∏–Ω–∞, –õ–∏—Ç–≤–∞

3. **–ù–µ –≤—ã–¥—É–º—ã–≤–∞–π –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ**:
   - –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö ‚Äî —Å–∫–∞–∂–∏: "–ù–µ—Ç —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –ø–æ —Å—É—Ñ—Ñ–∏–∫—Å—É –∏ —Ä–µ–≥–∏–æ–Ω—É –≤–µ—Ä–æ—è—Ç–Ω–æ..."
   - –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∏—à–∏: "–≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –¥–µ—Ä–µ–≤–Ω–∏", –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
"""},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1500,
            temperature=0.7
        )
        ai_response = completion.choices[0].message.content.strip()
    
        # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å
        response = f"""üß† Rodoslovnaya.PRO —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç:
    
    {ai_response}
    
üì¨ –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ {data['fio']}?

–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ rodoslovnaya.pro,
–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ predki@rodoslovnaya.pro
–∏–ª–∏ –≤ Telegram @rodoslovnaya_pro"""
    
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(response)
        response_sent = True  # ‚úÖ –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    except Exception as e:
        response = f"‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: {str(e)}\n\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ @rodoslovnaya.pro."
        response_sent = True
    finally:
        # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
        if delay_task and not delay_task.done():
            delay_task.cancel()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id
    data["chat_id"] = update.effective_chat.id
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
    save_to_google_sheets({
        "fio": data.get("fio"),
        "dates": data.get("dates"),
        "region": data.get("region"),
        "known": data.get("known"),
        "goal": data.get("goal"),
        "chat_id": data.get("chat_id"),
        "contact": data.get("contact"),
        "email": data.get("email"),
        "phone": data.get("phone"),
        "telegram": data.get("telegram"),
        "case_type": case_type,
        "recommendations": response
    })

    return ConversationHandler.END

def save_to_google_sheets(data):
    try:
        print("‚úÖ 1. –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google –¢–∞–±–ª–∏—Ü—É...")
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]  # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±—Ä–∞–Ω—ã –ø—Ä–æ–±–µ–ª—ã
        
        json_creds = os.getenv("GOOGLE_CREDENTIALS")
        if not json_creds:
            raise EnvironmentError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è GOOGLE_CREDENTIALS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        creds_dict = json.loads(json_creds)
        print("‚úÖ 2. JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω")

        creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
        print("‚úÖ 3. –£—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")

        client = gspread.authorize(creds)
        print("‚úÖ 4. –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Google Sheets API")

        sheet = client.open_by_url(os.getenv("GOOGLE_SHEET_URL")).sheet1
        print("‚úÖ 5. –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Ç–∞–±–ª–∏—Ü–µ")

        # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –¥–∞–Ω–Ω—ã—Ö
        chat_id = data.get("chat_id", "")

        row = [
            datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            data.get("fio"),
            data.get("dates"),
            data.get("region"),
            data.get("known"),
            data.get("goal"),
            chat_id, 
            data.get("contact"),
            data.get("email"),
            data.get("phone"),
            data.get("telegram"),
            data.get("case_type"),
            data.get("recommendations")
        ]
        sheet.append_row(row)
        print("‚úÖ 6. –î–ê–ù–ù–´–ï –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–´ –í –¢–ê–ë–õ–ò–¶–£!")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")

def main():
    TOKEN = os.getenv("TELEGRAM_TOKEN")
    if not TOKEN:
        logger.error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_TOKEN")
        return
    # üîΩ –î–û–ë–ê–í–¨ –°–Æ–î–ê –ü–†–ò–ù–¢ üîΩ
    print(f"TELEGRAM_TOKEN: {'–î–∞, –µ—Å—Ç—å' if TOKEN else '–ù–µ—Ç!'}")
    print(f"OPENAI_API_KEY: {os.getenv('OPENAI_API_KEY')}")
    print(f"GOOGLE_SHEET_URL: {os.getenv('GOOGLE_SHEET_URL')}")
    # üîº –î–û–ë–ê–í–¨ –°–Æ–î–ê –ü–†–ò–ù–¢ üîº

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API Key
    api_key = os.getenv("OPENAI_API_KEY")
    if not api_key:
        logger.error("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω! –ë–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã.")
        return
        
    # –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            STEP_FIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_fio)],
            STEP_DATES: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_dates)],
            STEP_REGION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_region)],
            STEP_KNOWN: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_known)],
            STEP_GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_goal)],
            STEP_CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_contact)],
        },
        fallbacks=[]
    )

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = (
        Application.builder()
        .token(TOKEN)
        .read_timeout(30)
        .write_timeout(30)
        .connect_timeout(30)
        .pool_timeout(30)
        .build()
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    app.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    app.run_polling()

# ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º main()
if __name__ == "__main__":
    main()
